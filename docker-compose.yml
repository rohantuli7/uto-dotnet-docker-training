services:
  postgres:
    image: postgres:16-alpine
    container_name: dashboard-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: dashboarddb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    networks:
      - dashboard-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: dashboard-backend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=dashboarddb;Username=postgres;Password=postgres123
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dashboard-network

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: dashboard-frontend
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
      - ApiSettings__BaseUrl=http://backend:8080
    ports:
      - "5000:5000"
    depends_on:
      - backend
    networks:
      - dashboard-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: dashboard-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - dashboard-network
    depends_on:
      - postgres

networks:
  dashboard-network:
    driver: bridge

volumes:
  postgres_data:
